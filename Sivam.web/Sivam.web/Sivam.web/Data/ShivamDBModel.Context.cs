//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sivam.web.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ShivamDBEntities : DbContext
    {
        public ShivamDBEntities()
            : base("name=ShivamDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Entity<tblVideo>().ToTable("tblVideos");
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblBooking> Bookings { get; set; }
        public virtual DbSet<tblDeptMaster> DeptMasters { get; set; }
        public virtual DbSet<tblOTPDetail> OTPDetails { get; set; }
        public virtual DbSet<tblTimesMaster> TimesMasters { get; set; }
        public virtual DbSet<tblVideo> Videos { get; set; }
    
        public virtual int sp_getAdminDashboard()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAdminDashboard");
        }
    
        public virtual ObjectResult<sp_getReport_Result> sp_getReport(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<bool> status, Nullable<int> filter)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var filterParameter = filter.HasValue ?
                new ObjectParameter("filter", filter) :
                new ObjectParameter("filter", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getReport_Result>("sp_getReport", startdateParameter, enddateParameter, statusParameter, filterParameter);
        }
    }
}
